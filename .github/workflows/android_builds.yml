name: ðŸ¤– Android Builds
on:
  workflow_call:

# Global Settings
env:
  GODOT_CPP_BRANCH: 4.4
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  TSAN_OPTIONS: suppressions=${{ github.workspace }}/misc/error_suppressions/tsan.txt
  UBSAN_OPTIONS: suppressions=${{ github.workspace }}/misc/error_suppressions/ubsan.txt

jobs:
  build-linux:
    # Stay one LTS before latest to increase portability of Linux artifacts.
    runs-on: ubuntu-22.04
    name: ${{ matrix.name }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Template Release
            cache-name: android-engine
            target: template_release
            sconsflags: profile="../misc/build_profiles/production_android.py"
            tests: false
            # Skip debug symbols, they're way too big with MSVC.
            bin: ./engine/bin/android_release.apk
            artifact-name: android-engine

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true
      - name: Save space
        run: |
          echo "100 largest packages:"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          sudo apt-get remove -y azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel mysql-server-core-8.0 kubectl microsoft-edge-stable containerd.io podman postgresql-14 
          sudo apt-get autoremove -y
          sudo apt-get clean
      - name: Setup Python and SCons
        if: "!matrix.legacy-scons"
        uses: ./.github/actions/godot-deps

      - name: Download pre-built Android Swappy Frame Pacing Library
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: godotengine/godot-swappy
          version: tags/from-source-2025-01-31
          file: godot-swappy.7z
          target: swappy/godot-swappy.7z
      
      - name: Extract pre-built Android Swappy Frame Pacing Library
        run: 7za x -y swappy/godot-swappy.7z -o${{github.workspace}}engine/thirdparty/swappy-frame-pacing

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Python and SCons (legacy versions)
        if: matrix.legacy-scons
        uses: ./.github/actions/godot-deps
        with:
          # Sync with Ensure*Version in SConstruct.
          python-version: 3.12
          scons-version: 4.0
      - name: Download windows deps
        run: |
          ./get_deps.sh

      - name: Download ffmpeg maker
        uses: actions/checkout@v5
        with:
          repository: 'Javernaut/ffmpeg-android-maker'
          ref: '5f18a3163a2826d794efbf2f282050fadd8b4b0e'
          path: 'buildeps/ffmpeg-android-maker'

      - name: Build ffmpeg
        run: |
          export ANDROID_SDK_HOME=$ANDROID_SDK_ROOT
          export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
          sudo apt install meson nasm ninja-build
          ./buildeps/ffmpeg-android-maker/ffmpeg-android-maker.sh -all-free -all-gpl -android=19 -abis=arm64-v8a
          mkdir ./buildeps/ffmpeg-android
          cp -r ./buildeps/ffmpeg-android-maker/build/ffmpeg/arm64-v8a/* ./buildeps/ffmpeg-android
          rm -rf ./buildeps/ffmpeg-android-maker
      
      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: android
          target: ${{ matrix.target }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.artifact-name }}
